generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  userId           String         @id @db.VarChar(45)
  name             String?        @db.VarChar(20)
  email            String?        @db.VarChar(45)
  password         String?        @db.VarChar(30)
  withrawal        Int?           @db.TinyInt
  refreshToken     refreshToken?
  diary            diary[]
  community        community[]
  reply            reply[]
  userToSearch     userToSearch[]
}

model refreshToken {
  userId       String @unique(map: "userId_UNIQUE")
  refreshToken String @db.VarChar(500)
  user         user   @relation(fields: [userId], references: [userId])
}


model diary {
  diaryId       Int       @id @unique @default(autoincrement())
  userId        String    @db.VarChar(45)
  date          String
  emotion       String    @db.VarChar(30)
  title         String    @db.VarChar(10)
  description   String    @db.VarChar(100)
  user          user      @relation(fields: [userId], references: [userId])

  @@index([userId], map: "diary_userId_fkey")
}

model userToSearch {
  searchId          Int       @id @unique @default(autoincrement())
  userId            String    @db.VarChar(45)
  searchWord        String    @db.VarChar(10)
  description       String    @db.VarChar(100)
  translation       String    @db.VarChar(100)
  user              user      @relation(fields: [userId], references: [userId])

  @@index([userId], map: "userToSearch_userId_fkey")
}

model community {
  boardId           Int       @id @unique @default(autoincrement())
  userId            String    @db.VarChar(45)
  title             String    @db.VarChar(30)
  content           String    @db.VarChar(200)
  redate            String    
  user              user      @relation(fields: [userId], references: [userId])
  reply             reply[]
  @@index([userId], map: "community_userId_fkey")
}

model reply {
  replyId           Int       @id @unique @default(autoincrement())
  userId            String    @db.VarChar(45)
  boardId           Int      
  content           String    @db.VarChar(200)
  redate            String    
  user              user      @relation(fields: [userId], references: [userId])
  community         community @relation(fields: [boardId], references: [boardId])

  @@index([userId], map: "reply_userId_fkey")
  @@index([boardId], map: "reply_boardId_fkey")
}

